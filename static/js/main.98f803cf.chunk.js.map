{"version":3,"sources":["atom.ts","localStorage.ts","components/CreateToDo.tsx","components/ToDoItem.tsx","components/SelectCategory.tsx","components/CreateCategory.tsx","components/ToDoList.tsx","App.tsx","index.tsx","theme.ts"],"names":["Categories","saveToDos","toDos","localStorage","setItem","JSON","stringify","saveCategories","categories","categoriesState","atom","key","default","localCategories","getItem","parse","loadCategories","TO_DO","DOING","DONE","categoryState","toDoState","localToDos","loadToDos","toDoSelector","selector","get","_ref","category","filter","toDo","set","_ref2","console","log","CreateToDo","setToDos","useSetRecoilState","useRecoilValue","_useForm","useForm","register","handleSubmit","setValue","react_default","a","createElement","onSubmit","prevToDos","id","Date","now","text","concat","Object","toConsumableArray","assign","type","required","placeholder","ToDoItem","item","onClick","event","name","currentTarget","targetIndex","findIndex","newToDo","slice","map","index","SelectCategory","_useRecoilState","useRecoilState","_useRecoilState2","slicedToArray","setCategory","_useRecoilState3","_useRecoilState4","setCategories","_useRecoilState5","_useRecoilState6","Fragment","value","onInput","newCategories","newToDos","push","CreateCategory","prevCategories","ToDoList","components_CreateCategory","components_SelectCategory","components_CreateToDo","components_ToDoItem","GlobalStyle","createGlobalStyle","_templateObject","taggedTemplateLiteral","props","theme","bgColor","App","components_ToDoList","ReactDOM","render","StrictMode","recoil","styled_components_browser_esm","boardColor","cardColor","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.98f803cf.chunk.js","sourcesContent":["import {atom, selector} from \"recoil\";\nimport {loadCategories, loadToDos} from \"./localStorage\";\n\nexport enum Categories {\n    \"TO_DO\" = \"TO_DO\",\n    \"DOING\" = \"DOING\",\n    \"DONE\" = \"DONE\"\n}\n\n\nexport interface ToDo {\n    id: number\n    text: string\n    category: Categories\n}\n\nexport interface Category {\n    text: string\n}\n\nexport const categoriesState = atom({\n    key: 'categories',\n    default: loadCategories() || [Categories.TO_DO, Categories.DOING, Categories.DONE]\n})\n\n// Selected category\nexport const categoryState = atom<Categories>({\n    key: 'category',\n    default: Categories.TO_DO\n})\n\nexport const toDoState = atom<ToDo[]>({\n    key: 'toDo',\n    default: loadToDos() || []\n})\n\n// Get current category's toDos\nexport const toDoSelector = selector({\n    key: 'toDoSelector',\n    get: ({get}) => {\n        const toDos = get(toDoState)\n        const category = get(categoryState)\n        return toDos.filter(toDo => toDo.category === category)\n    },\n    set: ({set}) => {\n        console.log(set)\n    }\n})\n","import {Category, ToDo} from \"./atom\";\n\nexport function loadToDos() {\n    const localToDos = localStorage.getItem('toDos')\n    if (localToDos) {\n        return JSON.parse(localToDos)\n    }\n    return null\n}\n\nexport function saveToDos(toDos: ToDo[]) {\n    localStorage.setItem('toDos', JSON.stringify(toDos))\n}\n\nexport function loadCategories() {\n    const localCategories = localStorage.getItem('categories')\n    if (localCategories) {\n        return JSON.parse(localCategories)\n    }\n    return null\n}\n\nexport function saveCategories(categories: Category[]) {\n    localStorage.setItem('categories', JSON.stringify(categories))\n}","import React from 'react'\nimport {useForm} from \"react-hook-form\"\nimport {categoryState, toDoState} from \"../atom\"\nimport {useRecoilValue, useSetRecoilState} from \"recoil\"\nimport {saveToDos} from \"../localStorage\";\n\ninterface Form {\n    toDo: string\n}\n\nconst CreateToDo = () => {\n    const setToDos = useSetRecoilState(toDoState)\n    const category = useRecoilValue(categoryState)\n    const {register, handleSubmit, setValue} = useForm<Form>()\n    const handleValid = ({toDo}: Form) => {\n        setToDos((prevToDos) => {\n            saveToDos([{id: Date.now(), text: toDo, category: category}, ...prevToDos])\n            return [\n                {id: Date.now(), text: toDo, category}, ...prevToDos\n            ]\n        })\n        setValue(\"toDo\", \"\")\n    }\n    return (\n        <form onSubmit={handleSubmit(handleValid)}>\n            <input\n                type=\"text\"\n                {...register(\"toDo\", {required: true})}\n                placeholder={'Write a to do.'}\n            />\n            <button>Add</button>\n        </form>\n    )\n};\n\nexport default CreateToDo;\n","import React from 'react'\nimport {categoriesState, Category, ToDo, toDoState} from \"../atom\"\nimport {useRecoilValue, useSetRecoilState} from \"recoil\"\nimport {saveToDos} from \"../localStorage\";\n\nconst ToDoItem = ({id, text, category}: ToDo) => {\n    const setToDos = useSetRecoilState(toDoState)\n    const categories = useRecoilValue(categoriesState).filter((item: string) => item !== category)\n    const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        const {\n            currentTarget: {name}\n        } = event\n        setToDos((prevToDos) => {\n            const targetIndex = prevToDos.findIndex((toDo) => toDo.id === id)\n            const newToDo = {id, text, category: name as any}\n            saveToDos([\n                ...prevToDos.slice(0, targetIndex),\n                newToDo,\n                ...prevToDos.slice(targetIndex + 1)\n            ])\n            return [\n                ...prevToDos.slice(0, targetIndex),\n                newToDo,\n                ...prevToDos.slice(targetIndex + 1)\n            ]\n        })\n    }\n    const onDeleteClick = () => {\n        setToDos((prevToDos) => {\n            const targetIndex = prevToDos.findIndex((toDo) => toDo.id === id)\n            saveToDos([...prevToDos.slice(0, targetIndex), ...prevToDos.slice(targetIndex + 1)])\n            return [...prevToDos.slice(0, targetIndex), ...prevToDos.slice(targetIndex + 1)]\n        })\n    }\n    // 카테고리들을 가져와서, 현재 카테고리를 제외한 배열, map 으로 버튼 표시\n    return (\n        <li>\n            <span>{text}</span>\n            {categories.map((category: Category, index: number) =>\n                <button key={index} name={category + ''} onClick={onClick}>{category}</button>\n            )}\n            <button name={category} onClick={onDeleteClick}>Delete</button>\n        </li>\n    )\n};\n\nexport default ToDoItem;\n","import React from 'react';\nimport {useRecoilState, useRecoilValue} from \"recoil\";\nimport {Categories, categoriesState, Category, categoryState, ToDo, toDoSelector, toDoState} from \"../atom\";\nimport {saveCategories, saveToDos} from \"../localStorage\";\n\nconst SelectCategory = () => {\n    const [category, setCategory] = useRecoilState(categoryState)\n    const [categories, setCategories] = useRecoilState(categoriesState)\n    const [toDos, setToDos] = useRecoilState(toDoState)\n    const selectedToDos = useRecoilValue(toDoSelector)\n    const onInput = (event: React.FormEvent<HTMLSelectElement>) => {\n        setCategory(event.currentTarget.value as Categories)\n    }\n    const onClick = () => {\n        // 클릭하면 현재 카테고리와 항목 모두 삭제\n        const newCategories = [...categories].filter((item: Category) => item + '' !== category)\n        const newToDos: ToDo[] = []\n        toDos.map((item: any) => {\n            const toDosCategory = item[\"category\"]\n            if (toDosCategory === category) return\n            newToDos.push(item)\n        })\n        setToDos(newToDos)\n        saveToDos(newToDos)\n        setCategories(newCategories)\n        saveCategories(newCategories)\n        setCategory(Categories.TO_DO)\n    }\n    return (\n        <>\n            <select value={category} onInput={onInput}>\n                {\n                    categories.map(\n                        (category: string, index: number) =>\n                            <option key={index} value={category}>{category}</option>\n                    )\n                }\n            </select>\n            {(category !== Categories.TO_DO) && (category !== Categories.DOING) && (category !== Categories.DONE) &&\n            <button onClick={onClick}>Delete Category</button>\n            }\n        </>\n    )\n};\n\nexport default SelectCategory;\n","import React from 'react';\nimport {useForm} from \"react-hook-form\";\nimport {useSetRecoilState} from \"recoil\";\nimport {categoriesState} from \"../atom\";\nimport {saveCategories} from \"../localStorage\";\n\ninterface Category {\n    category: string\n}\n\nconst CreateCategory = () => {\n    const {register, handleSubmit, setValue} = useForm<Category>()\n    const setCategories = useSetRecoilState(categoriesState)\n    const handleValid = ({category}: Category) => {\n        setCategories((prevCategories: any) => {\n            saveCategories([category, ...prevCategories])\n            return [category, ...prevCategories]\n        })\n        setValue('category', '')\n    }\n\n    return (\n        <>\n            <h2>Create your own category!</h2>\n            <form onSubmit={handleSubmit(handleValid)}>\n                <input\n                    type=\"text\"\n                    {...register('category', {required: true})}\n                    placeholder='Write category name.'\n                />\n                <button>Add</button>\n            </form>\n        </>\n    )\n};\n\nexport default CreateCategory;\n","import React from 'react'\nimport {useRecoilValue} from \"recoil\"\nimport CreateToDo from \"./CreateToDo\"\nimport {toDoSelector} from \"../atom\"\nimport ToDoItem from \"./ToDoItem\";\nimport SelectCategory from \"./SelectCategory\";\nimport CreateCategory from \"./CreateCategory\";\n\nconst ToDoList = () => {\n    const toDos = useRecoilValue(toDoSelector)\n    return (\n        <div>\n            <h1>To Do List</h1>\n            <hr/>\n            <CreateCategory/>\n            <SelectCategory/>\n            <CreateToDo/>\n            <ul>\n                {toDos.map((toDo) =>\n                    <ToDoItem key={toDo.id} {...toDo}/>\n                )}\n            </ul>\n        </div>\n    )\n};\n\nexport default ToDoList;\n","import React from 'react';\nimport {createGlobalStyle} from \"styled-components\";\nimport ToDoList from \"./components/ToDoList\";\n\nconst GlobalStyle = createGlobalStyle`\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure,\n  footer, header, hgroup, menu, nav, section {\n    display: block;\n  }\n\n  body {\n    line-height: 1.2;\n    font-family: 'Noto Sans KR', sans-serif;\n    background-color: ${props => props.theme.bgColor};\n    color: black;\n\n    ol, ul {\n      list-style: none;\n    }\n\n    blockquote, q {\n      quotes: none;\n    }\n\n    blockquote:before, blockquote:after,\n    q:before, q:after {\n      content: '';\n      content: none;\n    }\n\n    * {\n      box-sizing: border-box;\n    }\n\n    table {\n      border-collapse: collapse;\n      border-spacing: 0;\n    }\n\n    a {\n      text-decoration: none;\n      color: inherit;\n    }\n  }\n`;\n\nfunction App() {\n    return (\n        <>\n            <GlobalStyle/>\n            <ToDoList/>\n        </>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {RecoilRoot} from \"recoil\";\nimport {ThemeProvider} from \"styled-components\";\nimport {theme} from \"./theme\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <RecoilRoot>\n            <ThemeProvider theme={theme}>\n                <App/>\n            </ThemeProvider>\n        </RecoilRoot>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","import {DefaultTheme} from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n    bgColor: '#f7d794',\n    boardColor: '#778beb',\n    cardColor: 'white',\n};"],"sourceRoot":""}