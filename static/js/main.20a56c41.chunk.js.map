{"version":3,"sources":["atom.ts","localStorage.ts","components/CreateToDo.tsx","components/ToDoItem.tsx","components/SelectCategory.tsx","components/CreateCategory.tsx","components/ToDoList.tsx","App.tsx","index.tsx","theme.ts"],"names":["Categories","saveToDos","toDos","localStorage","setItem","JSON","stringify","categoriesState","atom","key","default","localCategories","getItem","parse","loadCategories","TO_DO","DOING","DONE","categoryState","toDoState","localToDos","loadToDos","toDoSelector","selector","get","_ref","category","filter","toDo","CreateToDo","setToDos","useSetRecoilState","useRecoilValue","_useForm","useForm","register","handleSubmit","setValue","react_default","a","createElement","onSubmit","prevToDos","id","Date","now","text","concat","Object","toConsumableArray","assign","type","required","placeholder","ToDoItem","categories","item","onClick","event","name","currentTarget","targetIndex","findIndex","newToDo","slice","map","index","SelectCategory","_useRecoilState","useRecoilState","_useRecoilState2","slicedToArray","setCategory","value","onInput","CreateCategory","setCategories","Fragment","prevCategories","ToDoList","components_CreateCategory","components_SelectCategory","components_CreateToDo","components_ToDoItem","GlobalStyle","createGlobalStyle","_templateObject","taggedTemplateLiteral","props","theme","bgColor","App","components_ToDoList","ReactDOM","render","StrictMode","recoil","styled_components_browser_esm","boardColor","cardColor","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.20a56c41.chunk.js","sourcesContent":["import {atom, selector} from \"recoil\";\nimport {loadCategories, loadToDos} from \"./localStorage\";\n\nexport enum Categories {\n    \"TO_DO\" = \"TO_DO\",\n    \"DOING\" = \"DOING\",\n    \"DONE\" = \"DONE\"\n}\n\n\nexport interface ToDo {\n    id: number\n    text: string\n    category: Categories\n}\n\nexport interface Category {\n    text: string\n}\n\nexport const categoriesState = atom({\n    key: 'categories',\n    default: loadCategories() || [Categories.TO_DO, Categories.DOING, Categories.DONE]\n})\n\n// Selected category\nexport const categoryState = atom<Categories>({\n    key: 'category',\n    default: Categories.TO_DO\n})\n\nexport const toDoState = atom<ToDo[]>({\n    key: 'toDo',\n    default: loadToDos() || []\n})\n\n// Get current category's toDos\nexport const toDoSelector = selector({\n    key: 'toDoSelector',\n    get: ({get}) => {\n        const toDos = get(toDoState)\n        const category = get(categoryState)\n        return toDos.filter(toDo => toDo.category === category)\n    }\n})\n","import {Category, ToDo} from \"./atom\";\n\nexport function loadToDos() {\n    const localToDos = localStorage.getItem('toDos')\n    if (localToDos) {\n        return JSON.parse(localToDos)\n    }\n    return null\n}\n\nexport function saveToDos(toDos: ToDo[]) {\n    localStorage.setItem('toDos', JSON.stringify(toDos))\n}\n\nexport function loadCategories() {\n    const localCategories = localStorage.getItem('categories')\n    if (localCategories) {\n        return JSON.parse(localCategories)\n    }\n    return null\n}\n\nexport function saveCategories(categories: Category[]) {\n    localStorage.setItem('categories', JSON.stringify(categories))\n}","import React from 'react'\nimport {useForm} from \"react-hook-form\"\nimport {categoryState, toDoState} from \"../atom\"\nimport {useRecoilValue, useSetRecoilState} from \"recoil\"\nimport {saveToDos} from \"../localStorage\";\n\ninterface Form {\n    toDo: string\n}\n\nconst CreateToDo = () => {\n    const setToDos = useSetRecoilState(toDoState)\n    const category = useRecoilValue(categoryState)\n    const {register, handleSubmit, setValue} = useForm<Form>()\n    const handleValid = ({toDo}: Form) => {\n        setToDos((prevToDos) => {\n            saveToDos([{id: Date.now(), text: toDo, category: category}, ...prevToDos])\n            return [\n                {id: Date.now(), text: toDo, category}, ...prevToDos\n            ]\n        })\n        setValue(\"toDo\", \"\")\n    }\n    return (\n        <form onSubmit={handleSubmit(handleValid)}>\n            <input\n                type=\"text\"\n                {...register(\"toDo\", {required: true})}\n                placeholder={'Write a to do.'}\n            />\n            <button>Add</button>\n        </form>\n    )\n};\n\nexport default CreateToDo;\n","import React from 'react'\nimport {categoriesState, Category, ToDo, toDoState} from \"../atom\"\nimport {useRecoilValue, useSetRecoilState} from \"recoil\"\nimport {saveToDos} from \"../localStorage\";\n\nconst ToDoItem = ({id, text, category}: ToDo) => {\n    const setToDos = useSetRecoilState(toDoState)\n    const categories = useRecoilValue(categoriesState).filter((item: string) => item !== category)\n    const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        const {\n            currentTarget: {name}\n        } = event\n        setToDos((prevToDos) => {\n            const targetIndex = prevToDos.findIndex((toDo) => toDo.id === id)\n            const newToDo = {id, text, category: name as any}\n            saveToDos([\n                ...prevToDos.slice(0, targetIndex),\n                newToDo,\n                ...prevToDos.slice(targetIndex + 1)\n            ])\n            return [\n                ...prevToDos.slice(0, targetIndex),\n                newToDo,\n                ...prevToDos.slice(targetIndex + 1)\n            ]\n        })\n    }\n    const onDeleteClick = () => {\n        setToDos((prevToDos) => {\n            const targetIndex = prevToDos.findIndex((toDo) => toDo.id === id)\n            saveToDos([...prevToDos.slice(0, targetIndex), ...prevToDos.slice(targetIndex + 1)])\n            return [...prevToDos.slice(0, targetIndex), ...prevToDos.slice(targetIndex + 1)]\n        })\n    }\n    // 카테고리들을 가져와서, 현재 카테고리를 제외한 배열, map 으로 버튼 표시\n    return (\n        <li>\n            <span>{text}</span>\n            {categories.map((category: Category, index: number) =>\n                <button key={index} name={category + ''} onClick={onClick}>{category}</button>\n            )}\n            <button name={category} onClick={onDeleteClick}>Delete</button>\n        </li>\n    )\n};\n\nexport default ToDoItem;\n","import React from 'react';\nimport {useRecoilState, useRecoilValue} from \"recoil\";\nimport {Categories, categoriesState, categoryState} from \"../atom\";\n\nconst SelectCategory = () => {\n    const [category, setCategory] = useRecoilState(categoryState)\n    const categories = useRecoilValue(categoriesState)\n    const onInput = (event: React.FormEvent<HTMLSelectElement>) => {\n        setCategory(event.currentTarget.value as Categories)\n    }\n    return (\n        <select value={category} onInput={onInput}>\n            {\n                categories.map(\n                    (category: string, index: number) =>\n                        <option key={index} value={category}>{category}</option>\n                )\n            }\n        </select>\n    )\n};\n\nexport default SelectCategory;\n","import React from 'react';\nimport {useForm} from \"react-hook-form\";\nimport {useSetRecoilState} from \"recoil\";\nimport {categoriesState} from \"../atom\";\nimport {saveCategories} from \"../localStorage\";\n\ninterface Category {\n    category: string\n}\n\nconst CreateCategory = () => {\n    const {register, handleSubmit, setValue} = useForm<Category>()\n    const setCategories = useSetRecoilState(categoriesState)\n    const handleValid = ({category}: Category) => {\n        setCategories((prevCategories: any) => {\n            saveCategories([category, ...prevCategories])\n            return [category, ...prevCategories]\n        })\n        setValue('category', '')\n    }\n\n    return (\n        <>\n            <h2>Create your own category!</h2>\n            <form onSubmit={handleSubmit(handleValid)}>\n                <input\n                    type=\"text\"\n                    {...register('category', {required: true})}\n                    placeholder='Write category name.'\n                />\n                <button>Add</button>\n            </form>\n        </>\n    )\n};\n\nexport default CreateCategory;\n","import React from 'react'\nimport {useRecoilValue} from \"recoil\"\nimport CreateToDo from \"./CreateToDo\"\nimport {toDoSelector} from \"../atom\"\nimport ToDoItem from \"./ToDoItem\";\nimport SelectCategory from \"./SelectCategory\";\nimport CreateCategory from \"./CreateCategory\";\n\nconst ToDoList = () => {\n    const toDos = useRecoilValue(toDoSelector)\n    return (\n        <div>\n            <h1>To Do List</h1>\n            <hr/>\n            <CreateCategory/>\n            <SelectCategory/>\n            <CreateToDo/>\n            <ul>\n                {toDos.map((toDo) =>\n                    <ToDoItem key={toDo.id} {...toDo}/>\n                )}\n            </ul>\n        </div>\n    )\n};\n\nexport default ToDoList;\n","import React from 'react';\nimport {createGlobalStyle} from \"styled-components\";\nimport ToDoList from \"./components/ToDoList\";\n\nconst GlobalStyle = createGlobalStyle`\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure,\n  footer, header, hgroup, menu, nav, section {\n    display: block;\n  }\n\n  body {\n    line-height: 1.2;\n    font-family: 'Noto Sans KR', sans-serif;\n    background-color: ${props => props.theme.bgColor};\n    color: black;\n\n    ol, ul {\n      list-style: none;\n    }\n\n    blockquote, q {\n      quotes: none;\n    }\n\n    blockquote:before, blockquote:after,\n    q:before, q:after {\n      content: '';\n      content: none;\n    }\n\n    * {\n      box-sizing: border-box;\n    }\n\n    table {\n      border-collapse: collapse;\n      border-spacing: 0;\n    }\n\n    a {\n      text-decoration: none;\n      color: inherit;\n    }\n  }\n`;\n\nfunction App() {\n    return (\n        <>\n            <GlobalStyle/>\n            <ToDoList/>\n        </>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {RecoilRoot} from \"recoil\";\nimport {ThemeProvider} from \"styled-components\";\nimport {theme} from \"./theme\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <RecoilRoot>\n            <ThemeProvider theme={theme}>\n                <App/>\n            </ThemeProvider>\n        </RecoilRoot>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","import {DefaultTheme} from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n    bgColor: '#f7d794',\n    boardColor: '#778beb',\n    cardColor: 'white',\n};"],"sourceRoot":""}